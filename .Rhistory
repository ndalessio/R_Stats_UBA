install.packages("readxl")
install.packages("xlsx")
library("readxl")
library("xlsx")
library("Readxl")
library("xlsx")
library("Readxl")
library("xlsx")
library("Readxl")
library("readxl")
library("xlsx")
library("xlsx")
install.packages("xlsx")
library("xlsx")
installed.packages()
install.packages("xlsx")
library("xlsx")
library(xlsx)
install.packages(c("backports", "broom", "callr", "dbplyr", "ellipsis", "farver", "fs", "glue", "isoband", "lubridate", "modelr", "pillar", "pkgbuild", "plyr", "ps", "purrr", "Rcpp", "reshape2", "rlang", "scales", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2"))
cuestionario <- read_excel("~/R/Curso_R_estadística/cuestionario.xlsx")
cuestionario <- read_excel("~/cuestionario.xlsx")
library(readxl)
cuestionario <- read_excel("~/cuestionario.xlsx")
View(cuestionario)
library(readxl)
library(xlsx)
# 5 y 6
cuestionario <- read_excel("~/R/Curso_R_estadística/cuestionario.xlsx")
View(cuestionario)
# 7 ¿Cuántos datos tiene el cuestionario?
# Tiene
# 8 ¿Cuántas variables tiene el cuestionario?
ncol(cuestionario)
# 7 ¿Cuántos datos tiene el cuestionario?
nrow(cuestionario)
#9 ¿Qué variable ocupa la posición 10 en la tabla de datos?
cuestionario[10]
#9 ¿Qué variable ocupa la posición 10 en la tabla de datos?
cuestionario(10)
#9 ¿Qué variable ocupa la posición 10 en la tabla de datos?
cuestionario(nrow == 10)
view(cuestionario)
View(cuestionario)
library(readxl)
library(xlsx)
# 5 y 6
cuestionario <- read_excel("~/R/Curso_R_estadística/cuestionario.xlsx")
View(cuestionario)
# 7 ¿Cuántos datos tiene el cuestionario?
nrow(cuestionario) # Tiene 717 datos.
# 8 ¿Cuántas variables tiene el cuestionario?
ncol(cuestionario) #Tiene 21 variables
#9 ¿Qué variable ocupa la posición 10 en la tabla de datos?
cuestionario(nrow == 10)
cuestionario == 12
which(cuestionario == '12', arr.ind=T)
cuestionario[12, ]
#9 ¿Qué variable ocupa la posición 10 en la tabla de datos?
cuestionario[12, ]
#10 Obtener una lista de las variables del cuestionario
names(cuestionario)
#Hacer un resumen de las variables del cuestionario
summary(cuestionario)
sumary(cuestionario$amor)
summary(cuestionario$amor)
horas.ocio <- cuestionario$ocio
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
2*ocio <- 2 * cuestionario$ocio
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
2*ocio <- 2 * horas.ocio
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
`2*ocio` <- 2 * horas.ocio
`2*ocio`
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
ocio_x_2 <- 2 * horas.ocio
cuestionario
head(cuestionario)
objeto
#14 Crear un objeto data.frame que solo contenga las variables clave ocio y horas.
data.frame(c(cuestionario$horas))
#14 Crear un objeto data.frame que solo contenga las variables clave ocio y horas.
objeto14<- data.frame(c(cuestionario$horas))
objeto14
#14 Crear un objeto data.frame que solo contenga las variables clave ocio y horas.
objeto14<- data.frame(c(cuestionario$horas, cuestionario$ocio, cuestionario$horas))
View(cuestionario)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- data.frame(cuestionario$genero == 1)
varones_cuestionario
View(varones_cuestionario)
(cuestionario$genero$1)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- filter(cuestionario, genero == 1)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- filter(cuestionario, genero == 1)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- filter(cuestionario, cuestionario$genero == 1)
variones_cuestionario
varones_cuestionario
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- data.frame(cuestionario$genero = 1)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- data.frame(cuestionario$genero == 1)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- data.frame(cuestionario, cuestionario$genero == 1)
View(varones_cuestionario)
#16 Calcular la media de la variable ocio y la variable horas
median(cuestionario$ocio)
#16 Calcular la media de la variable ocio y la variable horas
median(cuestionario$ocio, na.rm = TRUE)
median(cuestionario$horas, na.rm = TRUE)
#17 Calcular utilizando la función summary() un resumen estadístico de la variable ocio y la variable horas
summary(cuestionaro$ocio, na.rm = TRUE)
#17 Calcular utilizando la función summary() un resumen estadístico de la variable ocio y la variable horas
summary(cuestionaro$ocio)
#17 Calcular utilizando la función summary() un resumen estadístico de la variable ocio y la variable horas
summary(cuestionario$ocio, na.rm = TRUE)
summary(cuestionario$horas, na.rm = TRUE)
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
cuestionario$ocio2 <- cuestionario$ocio*2
#13 Crear la variable 2*ocio dentro del data frame cuesitonario
cuestionario$ocio2 <- cuestionario$ocio*2
cuestionario
library(readxl)
library(xlsx)
cuestionario <- read_excel("~/R/Curso_R_estadística/cuestionario.xlsx")
cuestionario$ocio2 <- cuestionario$ocio*2
cuestionario
View(cuestionario)
objeto14bis<- cuestionario[,c("Clave", "Horas", "Ocio")]
objeto14bis<- cuestionario[,c("Clave", "horas", "ocio")]
objeto14bis
#16 Calcular la media de la variable ocio y la variable horas
median(cuestionario$ocio, na.rm = TRUE)
#15 Crear un objeto data.frame solo con los valores de la muestra
varones_cuestionario <- cuestionario[cuestionario$genero == 1,]
varones_cuestionario
library(readxl)
cuestionario <- read_excel("cuestionario.xlsx")
View(cuestionario)
summarise(cuestionario$genero)
?summarise
summary(cuestionario$genero)
cuestionario$genero
# 1)Determinar la cantidad de hombres y mujeres que integran la muestra. Realizar un gráfico adecuado
summary(select(cuestionario, genero))
# 1)Determinar la cantidad de hombres y mujeres que integran la muestra. Realizar un gráfico adecuado
summary((cuestionario, genero)
# 1)Determinar la cantidad de hombres y mujeres que integran la muestra. Realizar un gráfico adecuado
summary(cuestionario, genero)
# 1)Determinar la cantidad de hombres y mujeres que integran la muestra. Realizar un gráfico adecuado
summary(cuestionario[genero])
#Utilizando describe() del paquete psych
describe(cuestionario$genero)
View(cuestionario)
#Utilizando describe() del paquete psych
describe(cuestionario$genero)
library(psych)
install.packages("psych")
library(psych)
#Utilizando describe() del paquete psych
describe(cuestionario$genero)
addmargins(prop.table(table(cuestionario$genero)))
val_lab(cuestionario$genero) <- make_labels("
1 masculino
2 femenino ")
library(tidyverse)
library(expss)
library(psych)
val_lab(cuestionario$genero) <- make_labels("
1 masculino
2 femenino ")
addmargins(prop.table(table(cuestionario$genero)))
addmargins(prop.table(table(cuestionario$genero))*100)
addmargins(prop.table(table(cuestionario$genero))*100, round(2))
addmargins(prop.table(table(cuestionario$genero))*100 %>%  round(2))
addmargins(prop.table(table(cuestionario$genero))*100) %>%
round(2)
addmargins(prop.table(table(cuestionario$genero))*100) %>%
round(0)
addmargins(prop.table(table(cuestionario$genero))*100) %>%
round(2)
#Grafico con barplor:
barplot(addmargins(prop.table(table(cuestionario$genero))*100) %>% round(2))
#Grafico con barplor:
barplot(prop.table(table(cuestionario$genero))*100) %>% round(2))
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100) %>% round(2))
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100,
main = "Genero") %>% round(2))
#Grafico con barplor:
barplot(((prop.table(table(cuestionario$genero))*100),
main = "Genero") %>% round(2))
#Grafico con barplor:
barplot(((prop.table(table(cuestionario$genero))*100)) %>% round(2))
#Grafico con barplor:
barplot(((prop.table(table(cuestionario$genero))*100)) %>% round(2))
#Grafico con barplor:
barplot(((prop.table(table(cuestionario$genero))*100)
main = "Genero") %>% round(2))
#Grafico con barplor:
barplot(((prop.table(table(cuestionario$genero))*100),
main = "Genero") %>% round(2))
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero") %>% round(2))
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero") %>% round(2)
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero", height = 100) %>% round(2)
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero') %>% round(2)
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet")) %>% round(2)
#Grafico con barplor:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet"),
border = FALSE) %>% round(2)
#Grafico con barplot:
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
ylim = 100,
col = c("Darkgreen", "Violet"),
border = FALSE) %>% round(2)
library(ggplot2)
ggplot(cuestionario, genero)
ggplot(cuestionario) +
geom_bar(cuestionario$genero)
ggplot(cuestionario) +
geom_bar(mapping = aes(cuestionario$genero))
ggplot(cuestionario) +
geom_bar(mapping = aes(cuestionario$genero)) +
xlab = "Genero"
genero <- cuestionario(genero = factor(c("Masculino", "Femenino")))
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), fill = genero)
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), fill = genero)
#Gráfico con ggplot2
genero <- cuestionario$genero
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), fill = genero)
ggplot(cuestionario) +
geom_bar(mapping = aes(genero))
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), fill = c("masculino", "femenino"))
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), fill = c("red", "yellow"))
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), color = genero)
ggplot(cuestionario) +
geom_bar(mapping = aes(genero), stat = "identity")
ggplot(cuestionario, mapping = aes(genero),) +
geom_bar(stat = "identity")
ggplot(cuestionario, mapping = aes(genero)) +
geom_bar(stat = "identity")
ggplot(cuestionario, mapping = aes(genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(x = genero, fill = genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(x = genero, fill = cuestionario$genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(x = genero, fill = genero)) +
geom_bar()
genero
type(genero)
genero = ifelse(cuestionario = 1, "Masculino", "Femenino")
genero = ifelse(genero = 1, "Masculino", "Femenino")
genero = ifelse(cuestionario$genero = 1, "Masculino", "Femenino")
cuestionario$genero = ifelse(cuestionario$genero = 1, "Masculino", "Femenino")
cuestionario$genero = ifelse(cuestionario$genero == 1, "Masculino", "Femenino")
genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
genero
ggplot(cuestionario, mapping = aes(x = genero, fill = genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(x = genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
addmargins(prop.table
(table(cuestionario$genero))*100) %>%
round(2)
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet"),
border = FALSE) %>% round(2)
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
addmargins(prop.table
(table(genero))*100) %>%
round(2)
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
library(readxl)
cuestionario <- read_excel("cuestionario.xlsx")
View(cuestionario)
library(tidyverse)
library(expss)
library(psych)
library(ggplot2)
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
addmargins(prop.table
(table(genero))*100) %>%
round(2)
cuestionario$genero
genero
head(cuestionario)
val_lab(cuestionario$genero) <- make_labels("1 masculino 2 femenino ")
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
addmargins(prop.table
(table(genero))*100) %>%
round(2)
barplot((prop.table(table(cuestionario$genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet"),
border = FALSE) %>% round(2)
barplot((prop.table(table(genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet"),
border = FALSE) %>% round(2)
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
ggplot(genero, mapping = aes(genero, fill = genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
genero <- cuestionario$genero
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
genero = ifelse(genero == 1, "Masculino", "Femenino")
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
view(genero)
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
barplot((prop.table(table(genero))*100),
main = "Genero",
ylab = "Frecuencia",
xlab = 'Genero',
col = c("Darkgreen", "Violet"),
border = FALSE) %>%
round(2)
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(genero, fill = genero)) +
geom_bar()
genero <- cuestionario$genero
genero = ifelse(genero == 1, "Masculino", "Femenino")
ggplot(cuestionario, mapping = aes(x = genero, fill = genero)) +
geom_bar()
library(ggplot2)
